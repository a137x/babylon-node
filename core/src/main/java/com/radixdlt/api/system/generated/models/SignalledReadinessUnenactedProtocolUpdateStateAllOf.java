/*
 * Radix System API - Babylon
 * This API is exposed by the Babylon Radix node to give clients access to information about the node itself, its configuration, status and subsystems.  It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against ledger state, you may also wish to consider using the [Core API or Gateway API instead](https://docs-babylon.radixdlt.com/main/apis/api-specification.html). 
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.system.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.system.generated.models.SignalledReadinessUnenactedProtocolUpdateStateAllOfThresholdsState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SignalledReadinessUnenactedProtocolUpdateStateAllOf
 */
@JsonPropertyOrder({
  SignalledReadinessUnenactedProtocolUpdateStateAllOf.JSON_PROPERTY_THRESHOLDS_STATE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SignalledReadinessUnenactedProtocolUpdateStateAllOf {
  public static final String JSON_PROPERTY_THRESHOLDS_STATE = "thresholds_state";
  private List<SignalledReadinessUnenactedProtocolUpdateStateAllOfThresholdsState> thresholdsState = new ArrayList<>();


  public SignalledReadinessUnenactedProtocolUpdateStateAllOf thresholdsState(List<SignalledReadinessUnenactedProtocolUpdateStateAllOfThresholdsState> thresholdsState) {
    this.thresholdsState = thresholdsState;
    return this;
  }

  public SignalledReadinessUnenactedProtocolUpdateStateAllOf addThresholdsStateItem(SignalledReadinessUnenactedProtocolUpdateStateAllOfThresholdsState thresholdsStateItem) {
    this.thresholdsState.add(thresholdsStateItem);
    return this;
  }

   /**
   * Get thresholdsState
   * @return thresholdsState
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_THRESHOLDS_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SignalledReadinessUnenactedProtocolUpdateStateAllOfThresholdsState> getThresholdsState() {
    return thresholdsState;
  }


  @JsonProperty(JSON_PROPERTY_THRESHOLDS_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setThresholdsState(List<SignalledReadinessUnenactedProtocolUpdateStateAllOfThresholdsState> thresholdsState) {
    this.thresholdsState = thresholdsState;
  }


  /**
   * Return true if this SignalledReadinessUnenactedProtocolUpdateState_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignalledReadinessUnenactedProtocolUpdateStateAllOf signalledReadinessUnenactedProtocolUpdateStateAllOf = (SignalledReadinessUnenactedProtocolUpdateStateAllOf) o;
    return Objects.equals(this.thresholdsState, signalledReadinessUnenactedProtocolUpdateStateAllOf.thresholdsState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(thresholdsState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignalledReadinessUnenactedProtocolUpdateStateAllOf {\n");
    sb.append("    thresholdsState: ").append(toIndentedString(thresholdsState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

